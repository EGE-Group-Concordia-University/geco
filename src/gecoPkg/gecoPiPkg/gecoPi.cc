// $Id: ECIOBoard.cc 37 2015-01-09 12:35:29Z wuthrich $
// ---------------------------------------------------------------
//
// Class gecoPI
//
// (c) Rolf Wuthrich
//     2016 Concordia University
//
// author:    Rolf Wuthrich
// email:     rolf.wuthrich@concordia.ca
// version:   v1 ($Revision: 37 $)
//
// This software is copyright under the BSD license
//  
// ---------------------------------------------------------------
// history:
// ---------------------------------------------------------------
// Date       Modification                     Author
// ---------------------------------------------------------------
// 07.02.2016 Creation                         R. Wuthrich
// ---------------------------------------------------------------

#include <tcl.h>
#include <fstream>
#include "gecoPi.h"
#include "geco.h"

using namespace std;


// ------------------------------------------------------------
//
// class gecoPi
//

// ---- CONSTRUCTOR
//

gecoPi::gecoPi(gecoApp* App) :
  gecoObj("Raspberry Pi","pi",App)
{
  // overwrites the Tcl cmd generated by gecoObj
  Tcl_DStringInit(TclCmd);
  Tcl_DStringAppend(TclCmd,"pi",-1);

  // adds options
  addOption("-getTemperature","gets the temperature of the raspberry pi (C)");
}


// ---- DESTRUCTOR
//

gecoPi::~gecoPi()
{
}


// ---- CMD : process a potential command option (# i of objv[])
//            searches the options table 
//            if a match is found processes the command option and
//            returns the index from the options table
//            if no match returns -1

int gecoPi::cmd(int &i, int objc,Tcl_Obj *const objv[])
{
  // first executes the command options defined in gecoObj
  int index=gecoObj::cmd(i,objc,objv);

  char str[TCL_DOUBLE_SPACE];

  if (index==getOptionIndex("-getTemperature"))
    {
      if (objc!=2)
      	{
      	  Tcl_WrongNumArgs(interp,i+1,objv,NULL);
      	  return -1;
      	}

      Tcl_PrintDouble(interp,getTemperature(),str);
      Tcl_AppendResult(interp,str,NULL);
      i++;
    }
  
  return index;
}



// ---- INFO : returns a Tcl_DString containing relevant info about the GPIO
//             

Tcl_DString* gecoPi::info(const char* frontStr)
{

  gecoObj::info(frontStr);

  ifstream ifs;
  ifs.open ("/proc/cpuinfo",std::ifstream::in);
  char line[256];
  while (ifs.getline(line,255))
    {
      Tcl_DStringAppend(infoStr,line,-1);
      Tcl_DStringAppend(infoStr,"\n",-1);
    }
  ifs.close();

  return infoStr;
}


// ---- GETTEMPERATURE  : returns the temperature of the raspberry pi
//

double gecoPi::getTemperature()
{
  ifstream ifs;
  ifs.open ("/sys/class/thermal/thermal_zone0/temp",std::ifstream::in);
  double temp;
  ifs >> temp;
  ifs.close();
  return temp/1000.0;
}


